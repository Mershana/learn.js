'use strict'

//  Задачи

// Последнее значение цикла
/* let i = 3;

while (i) {
  alert( i-- );
} */

/* Ответ: 1.
let i = 3;
while (i) {
  alert( i-- );
}
Каждое выполнение цикла уменьшает i. Проверка while(i) остановит цикл при i = 0.
Соответственно, будет такая последовательность шагов цикла («развернём» цикл):
let i = 3;
alert(i--); // выведет 3, затем уменьшит i до 2
alert(i--) // выведет 2, затем уменьшит i до 1
alert(i--) */ // выведет 1, затем уменьшит i до 0
// все, проверка while(i) не даст выполняться циклу дальше


// Какие значения выведет цикл while?
/* От 1 до 4
let i = 0;
while (++i < 5) alert( i );
Первое значение: i = 1, так как операция ++i сначала увеличит i, а потом уже произойдёт сравнение и выполнение alert.

Далее 2, 3, 4… Значения выводятся одно за другим. Для каждого значения сначала происходит увеличение, а потом – сравнение, так как ++ стоит перед переменной.

При i = 4 произойдёт увеличение i до 5, а потом сравнение while (5 < 5) – это неверно. Поэтому на этом цикл остановится, и значение 5 выведено не будет.

От 1 до 5
let i = 0;
while (i++ < 5) alert( i );
Первое значение: i = 1. Остановимся на нём подробнее. Оператор i++ увеличивает i, возвращая старое значение, так что в сравнении i++ < 5 будет участвовать старое i = 0.

Но последующий вызов alert уже не относится к этому выражению, так что получит новый i = 1.

Далее 2, 3, 4… Для каждого значения сначала происходит сравнение, а потом – увеличение, и затем срабатывание alert.

Окончание цикла: при i = 4 произойдёт сравнение while (4 < 5) – верно, после этого сработает i++, увеличив i до 5, так что значение 5 будет выведено. Оно станет последним.

Значение i = 5 последнее, потому что на следующем шаге while (5 < 5) ложно. */

// Выведите чётные числа
// При помощи цикла for выведите чётные числа от 2 до 10.
/* for (let i = 2; i <= 10; i++){
	if (i % 2 == 0){
		console.log(i);
	}
} */


// Замените for на while
// Перепишите код, заменив цикл for на while, без изменения поведения цикла.
/* let i = 0;
while (i < 3){
	alert( `number ${i}!` );
	i++;
}
 */

// Повторять цикл, пока ввод неверен
/* Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).
Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно. */

/* let number;
do {
	number = prompt('Введите число больше 100?', 0);
} while (number <= 100 && number); */
/* Цикл do..while повторяется, пока верны две проверки:
Проверка num <= 100 – то есть, введённое число всё ещё меньше 100.
Проверка && num вычисляется в false, когда num имеет значение null или пустая строка ''. В этом случае цикл while тоже нужно прекратить.
Кстати, сравнение num <= 100 при вводе null даст true, так что вторая проверка необходима. */

// Вывести простые числа
/* Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.
Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.
Напишите код, который выводит все простые числа из интервала от 2 до n.
Для n = 10 результат должен быть 2,3,5,7.
P.S. Код также должен легко модифицироваться для любых других интервалов.
решение */

/* let n = 10;

result:
for (let i = 2; i <= n; i++){ //// для всех i...
	
	for (let j = 2; j < i ; j++){ // // проверяем, делится ли число..
		if (i % j == 0) continue result; // не подходит, берём следующее
	}
	console.log(i) // простое число
} */